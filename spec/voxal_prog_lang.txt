(define iterate begin end clb
	(if (< begin end)
		(+ (clb begin) (iterate (+ 1 begin) end clb))))

(define fibonacci n
	(if (< n 2)
		n
		(+ (fibonacci (- n 1)) (fibonacci (- n 2)))))

(print (fibonacci 5))

(iterate 0 10
	(lambda x 
		(print x)))

<program> ::= { <function> }
<function> ::= '(' <ident> { <param> } ')'
<param> ::= <ident> | <literal> | <function>
<literal> ::= '\".*\"' | <number>
<ident> ::= [^"'()\s]+
<number> ::= [0-9]+

The current vocabulary is lexed by the REGEX: [()]|[^"'()\s]+|(\".*\")